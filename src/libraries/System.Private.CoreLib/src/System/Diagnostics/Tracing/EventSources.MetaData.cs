// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

namespace System.Diagnostics.Tracing
{
    internal sealed partial class RuntimeEventSource
    {
#if FEATURE_MANAGED_ETW
        // ProviderMetadata byte[] generated via Statics.MetadataForString(RuntimeEventSource.Log.Name, 0, 0, 0)
        protected internal override ReadOnlySpan<byte> ProviderMetadata => new byte[] { 0x11, 0x00, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x00 };
#endif
    }

    internal sealed partial class FrameworkEventSource
    {
#if FEATURE_MANAGED_ETW
        // ProviderMetadata byte[] generated via Statics.MetadataForString(FrameworkEventSource.Log.Name, 0, 0, 0)
        protected internal override ReadOnlySpan<byte> ProviderMetadata => new byte[] { 0x33, 0x00, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x00 };
#endif
    }

    internal sealed partial class NativeRuntimeEventSource
    {
#if FEATURE_MANAGED_ETW
        // ProviderMetadata byte[] generated via Statics.MetadataForString(NativeRuntimeEventSource.Log.Name, 0, 0, 0)
        protected internal override ReadOnlySpan<byte> ProviderMetadata => new byte[] { 0x22, 0x00, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x2d, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x2d, 0x44, 0x6f, 0x74, 0x4e, 0x45, 0x54, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x00 };
#endif
    }
}

namespace System.Threading
{
    internal sealed partial class PortableThreadPoolEventSource
    {
#if FEATURE_MANAGED_ETW
        // ProviderMetadata byte[] generated via Statics.MetadataForString(PortableThreadPoolEventSource.Log.Name, 0, 0, 0)
        protected internal override ReadOnlySpan<byte> ProviderMetadata => new byte[] { 0x22, 0x00, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x2d, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x2d, 0x44, 0x6f, 0x74, 0x4e, 0x45, 0x54, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x00 };
#endif
    }
}

namespace System.Threading.Tasks
{
    internal sealed partial class TplEventSource
    {
#if FEATURE_MANAGED_ETW
        // ProviderMetadata byte[] generated via Statics.MetadataForString(TplEventSource.Log.Name, 0, 0, 0)
        protected internal override ReadOnlySpan<byte> ProviderMetadata => new byte[] { 0x28, 0x00, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x54, 0x70, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x00 };
#endif
    }
}

namespace System.Buffers
{
    internal sealed partial class ArrayPoolEventSource
    {

#if FEATURE_MANAGED_ETW
        // ProviderMetadata byte[] generated via Statics.MetadataForString(ArrayPoolEventSource.Log.Name, 0, 0, 0)
        protected internal override ReadOnlySpan<byte> ProviderMetadata => new byte[] { 0x26, 0x00, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x73, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x00 };
#endif
    }
}
